<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on NOWEAVER</title>
    <link>https://noweaver.github.io/posts/</link>
    <description>Recent content in Posts on NOWEAVER</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Tue, 14 May 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://noweaver.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Creating a New Theme</title>
      <link>https://noweaver.github.io/posts/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://noweaver.github.io/posts/creating-a-new-theme/</guid>
      <description>Introduction 동해물과 백두산이
This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&#39;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&#39;t cover using CSS to style your theme.
We&#39;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>Hugo 블로그 생성</title>
      <link>https://noweaver.github.io/posts/05-14-Hugo-Blog-Installation/</link>
      <pubDate>Tue, 14 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://noweaver.github.io/posts/05-14-Hugo-Blog-Installation/</guid>
      <description>이 블로그는 Golang 기반의 정적 블로그 엔진 Hugo를 기반으로 만들었다. 매뉴얼을 보고 했지만 github 으로 디플로이 하는 부분이 가장 이해가 되지 않아 이 블로그를 참조했다. 그러나 이 블로그의 댓글에도 남겼지만, git submodule 등의 명령어가 제대로 먹히지 않아서 그냥 여러 블로그를 참조해서 만들었다. Hugo기반의 블로그를 생성하려면 golang이 설치되어야 한다. Golang 설치 방법을 참고한다.
Hugo 설치 $ brew install hugo $ which hugo /usr/local/bin/hugo $ hugo version Hugo Static Site Generator v0.55.5/extended darwin/amd64 BuildDate: unknown 미리 할 일 Hugo 기반의 블로그를 만들고 GitHub 에 디플로이를 하기 위해서는 두 개의 Repository가 필요하다.</description>
    </item>
    
  </channel>
</rss>